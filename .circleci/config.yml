version: 2

references:
  cf_install: &cf_install
    run:
      command: |
        curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github" | tar -zx
        mkdir -p `pwd`/bin
        chmod +x ./cf
        mv ./cf bin/
        echo export PATH="$PWD/bin:\$PATH" >> $BASH_ENV
        source $BASH_ENV
        cf install-plugin -f https://github.com/contraband/autopilot/releases/download/0.0.6/autopilot-linux

  cf_login: &cf_login
    run:
      command: |
        CF_USERNAME="${CF_Y_USER}" \
        CF_PASSWORD="${CF_Y_PASSWORD}" \
          make cf-login

  deploy_admin: &deploy_admin
    docker:
      - image: circleci/python:3.6.5-node
    steps:
        - *cf_install
        - attach_workspace:
            at: .
        - *cf_login
        - run: make -C admin deploy
  master_branch: &master_branch
    filters:
      branches:
        only:
          - master
  not_master_branch: &not_master_branch
    filters:
      branches:
        ignore:
          - master

jobs:
  setup:
    docker:
      - image: circleci/python:3.6.5-node
    steps:
        - checkout
        - persist_to_workspace:
            root: .
            paths:
              - Makefile
              - utils
              - api
              - admin
  build-admin:
    docker:
      - image: circleci/python:3.6.5-node
    steps:
        - attach_workspace:
            at: .
        - run: make -C admin setup
        - run: make -C admin vendor
        - persist_to_workspace:
            root: .
            paths:
              - admin
  test-admin:
    docker:
      - image: circleci/python:3.6.5-node
    steps:
        - attach_workspace:
            at: .
        - run: make -C admin setup-dev
        - run: make -C admin test
  build-api:
    docker:
      - image: circleci/python:3.6.5-node
    steps:
        - attach_workspace:
            at: .
        - run: make -C api setup
        - run: make -C api vendor
        - persist_to_workspace:
            root: .
            paths:
              - api
  deploy-dev-admin:
    environment:
      - APP: notify-dev
    <<: *deploy_admin
  deploy-notify:
    environment:
      - APP: notify
    <<: *deploy_admin
  deploy-admin:
    <<: *deploy_admin
  deploy-api:
    docker:
      - image: circleci/python:3.6.5-node
    steps:
        - *cf_install
        - attach_workspace:
            at: .
        - *cf_login
        - run: make -C api deploy-api
  deploy-celery:
    docker:
      - image: circleci/python:3.6.5-node
    steps:
        - *cf_install
        - attach_workspace:
            at: .
        - *cf_login
        - run: make -C api deploy-celery

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - setup
      - build-admin:
          requires:
            - setup
      - build-api:
          requires:
            - setup
      - test-admin:
          requires:
            - setup
      - deploy-dev-admin:
          <<: *not_master_branch
          requires:
            - build-admin
            - test-admin
      - deploy-admin:
          <<: *master_branch
          requires:
            - build-admin
            - test-admin
      - deploy-api:
          <<: *master_branch
          requires:
            - build-api
      - deploy-celery:
          <<: *master_branch
          requires:
            - build-api
      - unlock-prod-deploy:
          type: approval
          requires:
            - deploy-admin
            - deploy-api
            - deploy-celery
      - deploy-notify:
          requires:
            - unlock-prod-deploy
