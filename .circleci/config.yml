version: 2

references:
  python_node_image: &python_node_image
    docker:
      - image: circleci/python:3.6.5-node

  attach_workspace: &attach_workspace
    attach_workspace:
      at: .

  cf_install: &cf_install
    run:
      command: |
        curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github" | tar -zx
        mkdir -p `pwd`/bin
        chmod +x ./cf
        mv ./cf bin/
        echo export PATH="$PWD/bin:\$PATH" >> $BASH_ENV
        source $BASH_ENV
        cf install-plugin -f https://github.com/contraband/autopilot/releases/download/0.0.6/autopilot-linux

  cf_login_y_cld: &cf_login_y_cld
    run:
      command: |
        CF_USERNAME="${CF_Y_USER}" \
        CF_PASSWORD="${CF_Y_PASSWORD}" \
          make cf-login

  cf_login_b_cld: &cf_login_b_cld
    run:
      command: |
        CF_USERNAME="${CF_B_USER}" \
        CF_PASSWORD="${CF_B_PASSWORD}" \
          make cf-login

  deploy_admin_y_cld: &deploy_admin_y_cld
    <<: *python_node_image
    steps:
      - *cf_install
      - *attach_workspace
      - *cf_login_y_cld
      - run: make -C admin deploy
  deploy_api_y_cld: &deploy_api_y_cld
    <<: *python_node_image
    steps:
      - *cf_install
      - *attach_workspace
      - *cf_login_y_cld
      - run: make -C api deploy-api
  deploy_celery_y_cld: &deploy_celery_y_cld
    <<: *python_node_image
    steps:
      - *cf_install
      - *attach_workspace
      - *cf_login_y_cld
      - run: make -C api deploy-celery

  deploy_admin_b_cld: &deploy_admin_b_cld
    <<: *python_node_image
    steps:
      - *cf_install
      - *attach_workspace
      - *cf_login_b_cld
      - run: make -C admin deploy
  deploy_api_b_cld: &deploy_api_b_cld
    <<: *python_node_image
    steps:
      - *cf_install
      - *attach_workspace
      - *cf_login_b_cld
      - run: make -C api deploy-api
  deploy_celery_b_cld: &deploy_celery_b_cld
    <<: *python_node_image
    steps:
      - *cf_install
      - *attach_workspace
      - *cf_login_b_cld
      - run: make -C api deploy-celery

  master_branch: &master_branch
    filters:
      branches:
        only:
          - master
  not_master_branch: &not_master_branch
    filters:
      branches:
        ignore:
          - master

jobs:
  setup:
    <<: *python_node_image
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - Makefile
            - utils
            - api
            - admin
  build-admin:
    <<: *python_node_image
    steps:
      - *attach_workspace
      - run: make -C admin setup
      - run: make -C admin vendor
      - persist_to_workspace:
          root: .
          paths:
            - admin
  test-admin:
    <<: *python_node_image
    steps:
      - *attach_workspace
      - run: make -C admin setup-dev
      - run: make -C admin test
  build-api:
    <<: *python_node_image
    steps:
      - *attach_workspace
      - run: make -C api setup
      - run: make -C api vendor
      - persist_to_workspace:
          root: .
          paths:
            - api
  deploy-dev-admin:
    environment:
      - CLD_HOST: y.cld.gov.au
      - APP: notify-dev
    <<: *deploy_admin_y_cld
  deploy-notify-y-cld:
    environment:
      - CLD_HOST: y.cld.gov.au
      - APP: notify
    <<: *deploy_admin_y_cld
  deploy-admin-y-cld:
    environment:
      - CLD_HOST: y.cld.gov.au
    <<: *deploy_admin_y_cld
  deploy-api-y-cld:
    environment:
      - CLD_HOST: y.cld.gov.au
    <<: *deploy_api_y_cld
  deploy-celery-y-cld:
    environment:
      - CLD_HOST: y.cld.gov.au
    <<: *deploy_celery_y_cld
  deploy-admin-b-cld:
    environment:
      - CLD_HOST: b.cld.gov.au
      - CF_SPACE: notify
    <<: *deploy_admin_b_cld
  deploy-api-b-cld:
    environment:
      - CLD_HOST: b.cld.gov.au
      - CF_SPACE: notify
    <<: *deploy_api_b_cld
  deploy-celery-b-cld:
    environment:
      - CLD_HOST: b.cld.gov.au
      - CF_SPACE: notify
    <<: *deploy_celery_b_cld
  deploy-notify-b-cld:
    environment:
      - CLD_HOST: b.cld.gov.au
      - CF_SPACE: notify
      - APP: notify
    <<: *deploy_admin_b_cld

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - setup
      - build-admin:
          requires:
            - setup
      - build-api:
          requires:
            - setup
      - deploy-dev-admin:
          <<: *not_master_branch
          requires:
            - build-admin
      - deploy-admin-y-cld:
          <<: *master_branch
          requires:
            - build-admin
      - deploy-api-y-cld:
          <<: *master_branch
          requires:
            - build-api
      - deploy-celery-y-cld:
          <<: *master_branch
          requires:
            - build-api
      - unlock-y-cld-deploy:
          type: approval
          requires:
            - deploy-admin-y-cld
            - deploy-api-y-cld
            - deploy-celery-y-cld
      - deploy-notify-y-cld:
          requires:
            - unlock-y-cld-deploy
      - deploy-admin-b-cld:
          <<: *master_branch
          requires:
            - build-admin
            - deploy-notify-y-cld
      - deploy-api-b-cld:
          <<: *master_branch
          requires:
            - build-api
            - deploy-notify-y-cld
      - deploy-celery-b-cld:
          <<: *master_branch
          requires:
            - build-api
            - deploy-notify-y-cld
      - unlock-b-cld-deploy:
          type: approval
          requires:
            - deploy-notify-y-cld
            - deploy-admin-b-cld
            - deploy-api-b-cld
            - deploy-celery-b-cld
      - deploy-notify-b-cld:
          requires:
            - unlock-b-cld-deploy
