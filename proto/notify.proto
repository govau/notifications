syntax = "proto3";

service Notify {
  rpc GetUser (ForUserRequest) returns (User) {}
  rpc GetUsers (Empty) returns (Users) {}
  rpc GetService (ServiceRequest) returns (Service) {}
  rpc ServicesForUser (ForUserRequest) returns (Services) {}
  rpc TemplatesForService (TemplatesRequest) returns (Templates) {}

  rpc CreateTemplate(CreateTemplateRequest) returns (Template) {}
}

message Empty {
}

message Request {
  string user_id = 1;
}

message ForUserRequest {
  string user_id = 1;
}

message ServiceRequest {
  string service_id = 1;
}

message TemplatesRequest {
  string service_id = 1;
}

message CreateTemplateRequest {
  string service_id = 1;
  string created_by = 2;
  string name = 3;
  string subject = 4;
  string content = 5;
}

message Users {
  repeated User users = 1;
}

message Services {
  repeated Service services = 1;
}

message Templates {
  repeated Template templates = 1;
}

message Permissions {
  repeated string permissions = 1;
}

message User {
  string id = 7;
  string name = 1;
  string auth_type = 2;
  string email_address = 3;
  int64 failed_login_count = 4;
  string password_changed_at = 5;
  map<string, Permissions> permissions = 6;
}

message Service {
  bool active = 1;
  string branding = 2;
  string created_by = 3;
  string email_from = 4;
  string id = 5;
  string name = 6;
  string organisation_type = 8;
  int64 rate_limit = 9;

  repeated string annual_billing = 10;
  repeated string permissions = 11;
  repeated string user_to_service = 12;
  repeated string users = 13;
}

message Template {
  string id = 1;
  string name = 2;
  string subject = 3;
  string content = 4;
  string template_type = 5;
  string created_at = 6;
  string created_by = 7;
  string service = 8;
  string process_type = 9;
  bool archived = 10;
}
